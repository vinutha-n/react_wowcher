{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = number => new Intl.NumberFormat(\"en\", {\n  minimumFractionDigits: 2\n}).format(number);\n\nconst urls = ['api/branch1.json', 'api/branch2.json', 'api/branch3.json'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchSpace = event => {\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.componentDidMount = () => {\n      // axios.get(\"api/branch1.json\").then(json => {\n      //     this.setState({ products: json.data.products });\n      //     console.log('state',this.state.products)\n      // });\n      Promise.all([fetch('api/branch1.json'), fetch('api/branch2.json'), fetch('api/branch3.json')]).then(function (responses) {\n        // Get a JSON object from each of the responses\n        return Promise.all(responses.map(function (response) {\n          return response.json();\n        }));\n      }).then(function (data) {\n        // Log the data to the console\n        // You would do something with both sets of data here\n        console.log(data);\n      }).catch(function (error) {\n        // if there's an error, log it\n        console.log(error);\n      });\n    };\n\n    this.state = {\n      products: [],\n      search: null\n    };\n  }\n\n  render() {\n    const products = this.state;\n    const ProductTotal = products.products.filter(data => {\n      if (this.state.search == null) return data;else if (data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total', ProductTotal);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"product-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"Search Products\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.searchSpace(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Revenue\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, products.products.filter(data => {\n      if (this.state.search == null) return data;else if (data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).map(function (element) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 18\n        }\n      }, element.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 18\n        }\n      }, element.unitPrice));\n    })), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, ProductTotal)))));\n  }\n\n}\n\nexport default App; // {\n//   this.state.todos && \n//   Object.keys(icon).map(function (element) {\n//      return <tr>\n//        <td>{element}</td>\n//        <td>{icon[element]}</td>\n//      </tr>;\n//     })\n// }\n/////////////\n// {products.products.map(image => <div>{image.name}</div>)}","map":{"version":3,"sources":["/home/lenovo/Downloads/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js"],"names":["React","Component","axios","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","urls","App","constructor","props","searchSpace","event","keyword","target","value","setState","search","componentDidMount","Promise","all","fetch","then","responses","map","response","json","data","console","log","catch","error","state","products","render","ProductTotal","filter","name","toLowerCase","includes","reduce","totalProducts","product","unitPrice","e","element"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = (number) => new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\nconst urls = [\n  'api/branch1.json',\n  'api/branch2.json',\n  'api/branch3.json'\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: [],\n      search:null\n    };  \n  }\n\n  searchSpace=(event)=>{\n    let keyword = event.target.value;\n    this.setState({search:keyword})\n  }\n\n  componentDidMount = () => {\n    // axios.get(\"api/branch1.json\").then(json => {\n    //     this.setState({ products: json.data.products });\n    //     console.log('state',this.state.products)\n    // });\n    Promise.all([\n      fetch('api/branch1.json'),\n      fetch('api/branch2.json'),\n      fetch('api/branch3.json')\n    ]).then(function (responses) {\n      // Get a JSON object from each of the responses\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(function (data) {\n      // Log the data to the console\n      // You would do something with both sets of data here\n      console.log(data);\n    }).catch(function (error) {\n      // if there's an error, log it\n      console.log(error);\n    });\n\n\n  }\n  \n  render() {\n    const products = this.state\n    const ProductTotal = products.products.filter((data)=>{\n              if(this.state.search == null)\n                return data\n              else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n                return data\n        }\n        }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total',ProductTotal)\n\n    return (\n      <div class=\"product-list\">\n        <label>Search Products</label>\n        <input type=\"text\" onChange={(e)=>this.searchSpace(e)}/>\n        \n        <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Revenue</th>\n          </tr>\n        </thead>\n        <tbody>\n         {\n            products.products.filter((data)=>{\n              if(this.state.search == null)\n                return data\n              else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n                return data\n        }\n        }).map(function (element) {\n               return <tr>\n                 <td>{element.name}</td>\n                 <td>{element.unitPrice}</td>\n               </tr>;\n              })\n          }\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>Total</td>\n            <td>{ProductTotal}</td>\n          </tr>\n        </tfoot>\n      </table>\n      \n    </div>\n    \n  );\n  }\n}\n\nexport default App;\n\n // {\n          //   this.state.todos && \n          //   Object.keys(icon).map(function (element) {\n          //      return <tr>\n          //        <td>{element}</td>\n          //        <td>{icon[element]}</td>\n          //      </tr>;\n          //     })\n          // }\n          /////////////\n           // {products.products.map(image => <div>{image.name}</div>)}"]},"metadata":{},"sourceType":"module"}