{"ast":null,"code":"var _jsxFileName = \"/home/lenovo/Downloads/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = number => new Intl.NumberFormat(\"en\", {\n  minimumFractionDigits: 2\n}).format(number);\n\nconst urls = ['api/branch1.json', 'api/branch2.json'];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchSpace = event => {\n      let keyword = event.target.value;\n      this.setState({\n        search: keyword\n      });\n    };\n\n    this.state = {\n      products: [],\n      branchInfo1: [],\n      branchInfo2: [],\n      branchInfo3: [],\n      search: null,\n      fish: [],\n      chips: []\n    };\n  }\n\n  // componentDidMount = () => {\n  //   axios.get(\"api/branch1.json\").then(json => {\n  //       this.setState({ products: json.data.products });\n  //       console.log('state',this.state.products)\n  //   });\n  // }\n  componentDidMount() {\n    // Promise.all([\n    //     fetch(\"api/branch1.json\"),\n    //     fetch(\"api/branch2.json\"),\n    //     fetch(\"api/branch3.json\"),\n    // ])\n    // .then(([res1, res2, res3]) => Promise.all([res1.json(), res2.json(), res3.json()]))\n    // .then(([data1, data2, data3]) => this.setState({\n    //     branchInfo1: data1, \n    //     branchInfo2: data2,\n    //     branchInfo3: data3\n    // }));\n    // console.log('branchInfo1',this.state.branchInfo1)\n    // console.log('branchInfo2',this.state.branchInfo2)\n    // console.log('branchInfo3',this.state.branchInfo3)\n    ///////////////////////////////////////////////////////////////////////////////\n    // Promise.all([\n    //   fetch(\"api/branch1.json\"),\n    //   fetch(\"api/branch2.json\"),\n    //   fetch(\"api/branch3.json\"),\n    // ]).then(([res1, res2, res3]) => {\n    //    return Promise.all([res1.json(), res2.json(), res3.json()]) \n    // })\n    // .then(([res1, res2, res3]) => {\n    //   // set state in here\n    //   branchInfo1: res1, \n    //   branchInfo2: res2,\n    //   branchInfo3: res3,\n    // });\n    ////////////////////////////////////////////////////////////////////////////////////////\n    Promise.all([fetch('api/branch1.json'), fetch('api/branch2.json'), fetch('api/branch3.json')]).then(function (responses) {\n      // Get a JSON object from each of the responses\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(data => {\n      // Log the data to the console\n      // You would do something with both sets of data here\n      this.setState({\n        products: data\n      });\n      console.log('data', data);\n      console.log('products', this.state.products);\n    }).catch(function (error) {\n      // if there's an error, log it\n      console.log('error', error);\n    });\n  } // async componentDidMount() {\n  //   try {\n  //     const res = await fetch('./api/branch1.json');\n  //     const todos = await res.json();\n  //     const obj = Object.entries(todos).map(([key, value]) => ({key, value}))\n  //     this.setState({\n  //       todos:obj\n  //     });\n  //     console.log(obj)\n  //     console.log('state',this.state.todos)\n  //   } \n  //   catch (e) {\n  //     console.log(e);\n  //   }\n  // }  \n  // const champObject = { id: \"jarvaniv\", key: \"59\", name: \"Jarvan IV\", sprite: { url: \"http://ddragon.leagueoflegends.com/cdn/8.11.1/img/sprite/champion1.png\", x: 96, y: 48 }, stats: { hp: 571.2, hpperlevel: 90, mp: 302.2, mpperlevel: 40, movespeed: 340 }, tags: [\"Tank\", \"Fighter\"], title: \"the Exemplar of Demacia\" }\n  // renderProducts() {\n  //   return this.state.todos.products.map(function(product,key) {\n  //     return (\n  //       <tr key={key}>\n  //         <td>{product.name}</td>\n  //         <td>{product.unitPrice}</td>\n  //       </tr>\n  //     );\n  //   })\n  // }\n\n\n  render() {\n    const products = this.state;\n    const ProductTotal = products.products.filter(data => {\n      if (this.state.search == null) return data;else if (data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total', ProductTotal);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"product-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, \"Search Products\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: e => this.searchSpace(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Product\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, \"Revenue\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, products.products.filter(data => {\n      if (this.state.search == null) return data;else if (data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n        return data;\n      }\n    }).map(function (element) {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 18\n        }\n      }, element.name), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 18\n        }\n      }, element.unitPrice));\n    })), /*#__PURE__*/React.createElement(\"tfoot\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"Total\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, ProductTotal)))));\n  }\n\n}\n\nexport default App; // {\n//   this.state.todos && \n//   Object.keys(icon).map(function (element) {\n//      return <tr>\n//        <td>{element}</td>\n//        <td>{icon[element]}</td>\n//      </tr>;\n//     })\n// }\n/////////////\n// {products.products.map(image => <div>{image.name}</div>)}","map":{"version":3,"sources":["/home/lenovo/Downloads/react-Wowcher-Test-v2.0/react-Wowcher-Test/src/App.js"],"names":["React","Component","axios","formatNumber","number","Intl","NumberFormat","minimumFractionDigits","format","urls","App","constructor","props","searchSpace","event","keyword","target","value","setState","search","state","products","branchInfo1","branchInfo2","branchInfo3","fish","chips","componentDidMount","Promise","all","fetch","then","responses","map","response","json","data","console","log","catch","error","render","ProductTotal","filter","name","toLowerCase","includes","reduce","totalProducts","product","unitPrice","e","element"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport \"./App.css\";\n\nconst formatNumber = (number) => new Intl.NumberFormat(\"en\", { minimumFractionDigits: 2 }).format(number);\nconst urls = [\n  'api/branch1.json',\n  'api/branch2.json'\n];\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      products: [],\n      branchInfo1: [], \n      branchInfo2: [],\n      branchInfo3: [],\n      search:null,\n      fish: [],\n      chips: []\n    };  \n  }\n\n  searchSpace=(event)=>{\n    let keyword = event.target.value;\n    this.setState({search:keyword})\n  }\n\n  // componentDidMount = () => {\n  //   axios.get(\"api/branch1.json\").then(json => {\n  //       this.setState({ products: json.data.products });\n  //       console.log('state',this.state.products)\n  //   });\n  // }\n\n   componentDidMount(){\n      // Promise.all([\n      //     fetch(\"api/branch1.json\"),\n      //     fetch(\"api/branch2.json\"),\n      //     fetch(\"api/branch3.json\"),\n      // ])\n      // .then(([res1, res2, res3]) => Promise.all([res1.json(), res2.json(), res3.json()]))\n      // .then(([data1, data2, data3]) => this.setState({\n      //     branchInfo1: data1, \n      //     branchInfo2: data2,\n      //     branchInfo3: data3\n      // }));\n      // console.log('branchInfo1',this.state.branchInfo1)\n      // console.log('branchInfo2',this.state.branchInfo2)\n      // console.log('branchInfo3',this.state.branchInfo3)\n///////////////////////////////////////////////////////////////////////////////\n      // Promise.all([\n      //   fetch(\"api/branch1.json\"),\n      //   fetch(\"api/branch2.json\"),\n      //   fetch(\"api/branch3.json\"),\n      // ]).then(([res1, res2, res3]) => {\n      //    return Promise.all([res1.json(), res2.json(), res3.json()]) \n      // })\n      // .then(([res1, res2, res3]) => {\n      //   // set state in here\n      //   branchInfo1: res1, \n      //   branchInfo2: res2,\n      //   branchInfo3: res3,\n      // });\n////////////////////////////////////////////////////////////////////////////////////////\n    \n    Promise.all([\n      fetch('api/branch1.json'),\n      fetch('api/branch2.json'),\n      fetch('api/branch3.json')\n    ]).then(function (responses) {\n      // Get a JSON object from each of the responses\n      return Promise.all(responses.map(function (response) {\n        return response.json();\n      }));\n    }).then(data => {\n      // Log the data to the console\n      // You would do something with both sets of data here\n        this.setState({ products: data });\n        console.log('data',data);\n        console.log('products',this.state.products);\n    }).catch(function (error) {\n      // if there's an error, log it\n      console.log('error',error);\n    });\n\n\n  }\n  \n\n\n\n  // async componentDidMount() {\n  //   try {\n  //     const res = await fetch('./api/branch1.json');\n  //     const todos = await res.json();\n  //     const obj = Object.entries(todos).map(([key, value]) => ({key, value}))\n\n  //     this.setState({\n  //       todos:obj\n  //     });\n      \n  //     console.log(obj)\n  //     console.log('state',this.state.todos)\n  //   } \n  //   catch (e) {\n  //     console.log(e);\n  //   }\n  // }  \n\n  // const champObject = { id: \"jarvaniv\", key: \"59\", name: \"Jarvan IV\", sprite: { url: \"http://ddragon.leagueoflegends.com/cdn/8.11.1/img/sprite/champion1.png\", x: 96, y: 48 }, stats: { hp: 571.2, hpperlevel: 90, mp: 302.2, mpperlevel: 40, movespeed: 340 }, tags: [\"Tank\", \"Fighter\"], title: \"the Exemplar of Demacia\" }\n\n\n  // renderProducts() {\n  //   return this.state.todos.products.map(function(product,key) {\n  //     return (\n  //       <tr key={key}>\n  //         <td>{product.name}</td>\n  //         <td>{product.unitPrice}</td>\n  //       </tr>\n  //     );\n  //   })\n\n  // }\n\n  render() {\n    const products = this.state\n    const ProductTotal = products.products.filter((data)=>{\n              if(this.state.search == null)\n                return data\n              else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n                return data\n        }\n        }).reduce((totalProducts, product) => totalProducts + product.unitPrice, 0);\n    console.log('total',ProductTotal)\n\n    return (\n      <div class=\"product-list\">\n        <label>Search Products</label>\n        <input type=\"text\" onChange={(e)=>this.searchSpace(e)}/>\n        \n        <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Revenue</th>\n          </tr>\n        </thead>\n        <tbody>\n         {\n            products.products.filter((data)=>{\n              if(this.state.search == null)\n                return data\n              else if(data.name.toLowerCase().includes(this.state.search.toLowerCase())) {\n                return data\n        }\n        }).map(function (element) {\n               return <tr>\n                 <td>{element.name}</td>\n                 <td>{element.unitPrice}</td>\n               </tr>;\n              })\n          }\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>Total</td>\n            <td>{ProductTotal}</td>\n          </tr>\n        </tfoot>\n      </table>\n      \n    </div>\n    \n  );\n  }\n}\n\nexport default App;\n\n // {\n          //   this.state.todos && \n          //   Object.keys(icon).map(function (element) {\n          //      return <tr>\n          //        <td>{element}</td>\n          //        <td>{icon[element]}</td>\n          //      </tr>;\n          //     })\n          // }\n          /////////////\n           // {products.products.map(image => <div>{image.name}</div>)}"]},"metadata":{},"sourceType":"module"}